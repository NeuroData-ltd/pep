"""empty message

Revision ID: 690b17b9f427
Revises: 
Create Date: 2024-04-03 23:37:08.089119

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '690b17b9f427'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('person_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=255), nullable=True),
    sa.Column('active_status', sa.String(length=255), nullable=True),
    sa.Column('deceased', sa.Boolean(), nullable=True),
    sa.Column('gender', sa.String(length=255), nullable=True),
    sa.Column('person_type', sa.String(length=255), nullable=True),
    sa.Column('profile_notes', sa.String(length=255), nullable=True),
    sa.Column('sanction_list_type', sa.String(length=255), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('birth_place', sa.String(length=255), nullable=True),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('keyword', postgresql.ARRAY(sa.VARCHAR(length=255)), nullable=True),
    sa.Column('source_name', postgresql.ARRAY(sa.VARCHAR(length=255)), nullable=True),
    sa.Column('category', postgresql.ARRAY(sa.VARCHAR(length=255)), nullable=True),
    sa.Column('country_code', postgresql.ARRAY(sa.VARCHAR(length=10)), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('adress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('country', sa.String(length=255), nullable=True),
    sa.Column('number', sa.String(length=255), nullable=True),
    sa.Column('other', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('street', sa.String(length=255), nullable=True),
    sa.Column('zip_code', sa.String(length=255), nullable=True),
    sa.Column('pep_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pep_id'], ['person_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('identity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identification_value', sa.String(length=255), nullable=True),
    sa.Column('identification_type', sa.String(length=255), nullable=True),
    sa.Column('pep_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pep_id'], ['person_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('name',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('middle_name', sa.String(length=255), nullable=True),
    sa.Column('name_type', sa.String(length=255), nullable=True),
    sa.Column('original_script_name', sa.String(length=255), nullable=True),
    sa.Column('whole_name', sa.String(length=255), nullable=True),
    sa.Column('pep_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pep_id'], ['person_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('begin_day', sa.String(length=10), nullable=True),
    sa.Column('begin_month', sa.String(length=10), nullable=True),
    sa.Column('begin_year', sa.String(length=10), nullable=True),
    sa.Column('end_day', sa.String(length=10), nullable=True),
    sa.Column('end_month', sa.String(length=10), nullable=True),
    sa.Column('end_year', sa.String(length=10), nullable=True),
    sa.Column('occupation_title', sa.String(length=255), nullable=True),
    sa.Column('role_type', sa.String(length=255), nullable=True),
    sa.Column('pep_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pep_id'], ['person_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relationship',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('relationship_name', sa.String(length=255), nullable=True),
    sa.Column('owner_person_id', sa.Integer(), nullable=True),
    sa.Column('related_person_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_person_id'], ['person_info.id'], ),
    sa.ForeignKeyConstraint(['related_person_id'], ['person_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sanction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sanction_begin_date', sa.DateTime(), nullable=True),
    sa.Column('sanction_name', sa.String(length=255), nullable=True),
    sa.Column('sanction_description', sa.TEXT(), nullable=True),
    sa.Column('pep_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pep_id'], ['person_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sanction')
    op.drop_table('relationship')
    op.drop_table('person_role')
    op.drop_table('name')
    op.drop_table('identity')
    op.drop_table('adress')
    op.drop_table('users')
    op.drop_table('person_info')
    # ### end Alembic commands ###
